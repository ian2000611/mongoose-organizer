{
  "name": "mongoose-organizer",
  "version": "0.1.0",
  "description": "Mongoose Model Management",
  "main": "index.js",
  "scripts": {
    "test": "gulp && CODECLIMATE_REPO_TOKEN=5beb25ba9fd091cc3d0ff6916606c68a4a8d158d9472fe603621d341c291e6f4 codeclimate < coverage/lcov.info"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/atsid/mongoose-organizer.git"
  },
  "bugs": {
    "url": "https://github.com/atsid/mongoose-organizer/issues"
  },
  "keywords": [
    "mongoose",
    "mongodb"
  ],
  "author": {
    "name": "Applied Technical Systems, Inc"
  },
  "contributors": [
    {
      "name": "Chris Trevino",
      "email": "chris.trevino@atsid.com"
    }
  ],
  "license": "Apache",
  "devDependencies": {
    "babel": "^4.7.16",
    "chai": "^2.1.2",
    "codeclimate-test-reporter": "0.0.4",
    "del": "^1.1.1",
    "esprima-fb": "^13001.1001.0-dev-harmony-fb",
    "gulp": "^3.8.11",
    "gulp-babel": "^4.0.0",
    "gulp-changed": "^1.2.1",
    "gulp-cli": "^0.2.0",
    "gulp-istanbul": "^0.7.0",
    "gulp-jscs": "^1.4.0",
    "gulp-jshint": "^1.9.4",
    "gulp-mocha": "^2.0.0",
    "gulp-semver-tasks": "^0.1.0",
    "isparta": "^2.2.0",
    "mongoose": "^3.8.25",
    "mongoose-q": "0.0.16",
    "q": "^1.2.0",
    "run-sequence": "^1.0.2"
  },
  "dependencies": {
    "debug": "^2.1.3",
    "lodash": "^3.5.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/atsid/mongoose-organizer.svg?branch=master)](https://travis-ci.org/atsid/mongoose-organizer)\r\n[![Test Coverage](https://codeclimate.com/github/atsid/mongoose-organizer/badges/coverage.svg)](https://codeclimate.com/github/atsid/mongoose-organizer)\r\n[![Code Climate](https://codeclimate.com/github/atsid/mongoose-organizer/badges/gpa.svg)](https://codeclimate.com/github/atsid/mongoose-organizer)\r\n[![Dependency Status](https://david-dm.org/atsid/mongoose-organizer.svg)](https://david-dm.org/atsid/mongoose-organizer)\r\n\r\n[![NPM](https://nodei.co/npm/mongoose-organizer.png)](https://nodei.co/npm/mongoose-organizer/)\r\n\r\n# mongoose-organizer\r\nMongoose Model Organization\r\n\r\nThe Mongoose-Organizer provides a factory utility that allows you to organize Mongoose models using declarative configuration.\r\n\r\n```\r\nproject\r\n└───models\r\n    ├───User\r\n    |   └───index.js (Uses mongoose-organizer to autowire the model)\r\n    |   └───User.definition.js (Mongoose definition object)\r\n    |   └───User.methods.js (An object of schema-methods by name)\r\n    |   └───User.handlers.js (An array of event handler implementations e.g. pre-save)\r\n    |   └───User.virtuals.js (An array of virtual properties)\r\n```\r\n\r\n# Usage\r\nBy using the 'autowire' function, the mongoose-organizer will reflect over your model's path and load in model components.\r\n```js\r\n// Index.js\r\nlet organizer = require('mongoose-organizer');\r\nmodule.exports = organizer.autowire('User', __dirname, {<optional configuration overrides>});\r\n```\r\n\r\n# Non-Autowiring Usage\r\nBy using the 'makeSchema' function, the mongoose-organizer can use inline configuration.\r\n```js\r\nlet organizer = require('mongoose-organizer');\r\nmodule.exports = makeSchema({<configuration object>}\r\n```\r\n\r\n# Configuration Options\r\n* name (required) - The name of the model\r\n* definition / definitionPath (required) - The explicit Mongoose schema definition, or a path to the schema definition.\r\n* options / optionsPath (optional) - The explicit Mongoose schema options, or a path to the schema options. Default value is:\r\n\r\n```js\r\n{ \r\n    toJSON: {virtual: true},\r\n    toObject: {virtuals: true}\r\n}\r\n```\r\n\r\n* methods / methodsPath (optional) - An object of methods by name. \r\n```js\r\nmodule.exports = {\r\n    myFancyFunction: function() {\r\n    ...\r\n    }\r\n}\r\n```\r\n\r\n* virtuals / virtualsPath (optional) - An array of virtual property definitions\r\n```js\r\nmodule.exports = [\r\n    {\r\n        name: '<virtual path>'\r\n        get: <optional getter function>\r\n        set: <optional setter function>\r\n    }\r\n]\r\n```\r\n\r\n* handlers / handlersPath (optional) - An array of event handler definitions\r\n```js\r\nmodule.exports = [\r\n    {\r\n            type: 'pre',\r\n            event: 'save',\r\n            description: '<a useful description of the handler>',\r\n            handler: (done) => {...}\r\n    }\r\n];\r\n```\r\n",
  "readmeFilename": "README.md",
  "gitHead": "76b8d3c4a4ec7e987c288467721d704dde2c0291",
  "homepage": "https://github.com/atsid/mongoose-organizer#readme",
  "_id": "mongoose-organizer@0.1.0",
  "_shasum": "2e48bc34a4348589956c08f92495058e34330b5e",
  "_from": "ian2000611/mongoose-organizer",
  "_resolved": "git://github.com/ian2000611/mongoose-organizer.git#76b8d3c4a4ec7e987c288467721d704dde2c0291"
}
